<div>
  <div class="contents">
    <div class="container">
      <Navigation />
      <div class="header-block">
        <h1 class="typography.display">
          Elixir Umbrella Applications and Testing with Mox
        </h1>
      </div>
      <!--page-header-->
    </div>
    <!--container-->
    <div class="container">
      <div class="main-block">
        <div class="main-block.content">
          <div class="main-block.content-item">
            <div class="main-block.content-section">
              <div class="main-block.content-section-item">
                <p class="typography.body-text">
                  What’s the big deal with Elixir umbrellas?

                  An Elixir umbrella is a container for mix apps; a structure useful to separate the application’s concerns as each app is contained within its own mix project.

                  Why is this cool?

                  Because it’s like Lego and Lego is cool.

                  Who’s Mox you ask?

                  Mox is cool too… Let’s dive in!
                </p>
                <h3 class="typography.sub-heading">
                  Breethe
                </h3>
                <p class="typography.body-text">
                  Throughout this post, we will use Breethe as an example. Breethe is a Progressive Web App that gives users quick and easy access to air quality data for locations around the world. Pollution and global warming are getting worse. The first step to understanding and solving these problems is to raise awareness by providing everyone with easy access to accurate data.
                </p>
                <p class="typography.body-text">
                  The application is open source and we encourage everyone interested to look through the source for reference. The server for this application was implemented using an Elixir umbrella application which will be the focus of this post. The client for Breethe was built with Glimmer.js, which we discussed in previous posts:
                </p>
                <h3 class="typography.sub-heading">
                  Umbrella applications and separating concerns
                </h3>
                <p class="typography.body-text">
                  When we first started building Breethe, we asked ourselves a simple question which would dictate the structure of the application and our motivation for using an umbrella app to organise our code. This question was: what if we want to change our air quality data provider? It turns out this wasn’t just speculation as we are now in the process of doing just that and our decision to use an umbrella app will make the process tremendously easy.
                </p>
                <a href="#">
                  Niklas Long
                </a>
                <p>
                  March,13 2019
                </p>
              </div>
            </div>
            <!--section-->
          </div>
        </div>
        <div class="main-block.sidebar">
          <p class="typography.small-text">
            Other Resources
          </p>
          <div class="card">
            <h3 class="card.sub-heading">
              Talks Catalog
            </h3>
            <p class="card.text">
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
            </p>
            <a class="typography.arrow-link" href="/calendar">
              View Our Calendar
            </a>
          </div>
        </div>
        <!--sidebar-->
      </div>
    </div>
    <div class="container">
      <Footer />
    </div>
  </div>
  <!--contents-->
</div>