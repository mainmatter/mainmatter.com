#!/usr/bin/env ruby
require 'rubygems'
require 'bundler'

Bundler.setup(:development)

require 'httparty'
require 'active_support/core_ext/hash/keys'
require 'active_support/core_ext/string/inflections'

# argh, good old Ruby SSL errorsâ€¦ This should be fixed, it's rediculous to merge this as it is ðŸ˜³
course_data = HTTParty.get('https://api.mike.works/api/v1/courses', verify: false).parsed_response.deep_symbolize_keys

course_data[:data].each do |course|
  attributes = course[:attributes]
  id = course[:id]
  title, description, category, created_at = attributes.values_at(:title, :description, :category, :'created-at')
  slug = "#{created_at[0..9]}-#{title.parameterize.downcase}"

  course_yaml = {
    layout:      'workshop',
    title:       title,
    permalink:   "/workshops/#{slug}",
    category:    category,
    description: description
  }

  stage_data = HTTParty.get("https://api.mike.works/api/v1/courses/#{id}/stages", verify: false, format: :json).parsed_response.deep_symbolize_keys
  course_yaml[:stages] = stage_data[:data].map do |stage|
    attributes = stage[:attributes]
    title, description, duration = attributes.values_at(:title, :description, :duration)
    stage_yaml = {
      title:       title,
      description: description,
      duration:    duration
    }

    stage_yaml[:agenda_items] = stage[:relationships][:'agenda-items'][:data].map do |agenda_item_ref|
      id, type = agenda_item_ref.values_at(:id, :type)
      agenda_item = stage_data[:included].find { |include| include[:type] == type && include[:id] == id }
      attributes = agenda_item[:attributes]
      title, description, duration, item_type, start_time = attributes.values_at(:title, :description, :duration, :'item-type', :'start-time', :duration)
      start_time = start_time.to_s

      {
        title:       title,
        description: description,
        item_type:   item_type,
        start_time:  "#{start_time[0...(start_time.length - 2)]}:#{start_time[-2..-1]}",
        duration:    duration
      }
    end

    stage_yaml
  end

  filename = File.expand_path("../../workshops/_posts/#{slug}.md", __FILE__)
  File.open(filename, 'w') do |file|
    file << course_yaml.deep_stringify_keys.to_yaml
    file << "---"
  end
end
